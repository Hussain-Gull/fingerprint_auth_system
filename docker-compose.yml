services:
  # ---------- Database ----------
  db:
    image: postgres:15
    container_name: fingerprint_db
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: fingerprintdb
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ---------- Backend ----------
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: fingerprint_backend
    restart: unless-stopped
    env_file:
      - .env
    environment:
      DATABASE_URL: postgresql+psycopg2://postgres:postgres@db:5432/fingerprintdb
      SECUGEN_SDK_PATH: /secugen_sdk/bin/x64
      PYTHONUNBUFFERED: 1
      PYTHONDONTWRITEBYTECODE: 1
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - "C:/secugen_sdk:/secugen_sdk:ro"
      - pip_cache:/root/.cache/pip
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]

  # ---------- Frontend ----------
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: fingerprint_frontend
    restart: unless-stopped
    ports:
      - "5173:5173"
    environment:
      CHOKIDAR_USEPOLLING: "true"
      WATCHPACK_POLLING: "true"
      NODE_ENV: development
    volumes:
      - ./frontend:/usr/src/app
      - frontend_node_modules:/usr/src/app/node_modules
      - yarn_cache:/usr/local/share/.cache/yarn
    depends_on:
      - backend
    command: ["yarn", "dev", "--host", "0.0.0.0", "--port", "5173"]

volumes:
  db_data:
  pip_cache:
  yarn_cache:
  frontend_node_modules:
